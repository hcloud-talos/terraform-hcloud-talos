name: Developer Experience
on:
  workflow_dispatch:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - edited
    branches:
      - main

permissions: read-all

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      issues: write # for create or update comment
      pull-requests: write # for create or update comment
    steps:
      - name: Checkout
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
      - name: Configure Terraform plugin cache
        run: |
          echo 'plugin_cache_dir = "$HOME/.terraform.d/plugin-cache"' > ~/.terraformrc
          mkdir -p ~/.terraform.d/plugin-cache
      - name: Cache Terraform
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: "${{ runner.os }}-terraform-${{ hashFiles(format('{0}/.terraform.lock.hcl', matrix.module)) }}"
          restore-keys: "${{ runner.os }}-terraform-"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive -check -diff
        continue-on-error: true
      - name: Terraform Init
        id: init
        run: terraform init -no-color
        continue-on-error: true
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: true
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: |
            Terraform-Check:
      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            ### Terraform-Check: ${{ steps.fmt.outcome == 'success' && steps.init.outcome == 'success' && steps.validate.outcome == 'success' && '‚úÖ' || '‚ùå' }}
            
            <details><summary>üñå Terraform Format: ${{ steps.fmt.outcome == 'success' && '‚úÖ' || '‚ùå' }}</summary>
            
            ```
            # Outputs:
            ${{ steps.fmt.outputs.stdout }}
            
            # Errors:
            ${{ steps.fmt.outputs.stderr }}
            ```
            
            </details>
            
            <details><summary>‚öôÔ∏è Terraform Init: ${{ steps.init.outcome == 'success' && '‚úÖ' || '‚ùå' }}</summary>
            
            ```
            # Outputs:
            ${{ steps.init.outputs.stdout }}
            
            # Errors:
            ${{ steps.init.outputs.stderr }}
            ```
            </details>
            
            <details><summary>ü§ñ Terraform Validate: ${{ steps.validate.outcome == 'success' && '‚úÖ' || '‚ùå' }}</summary>
            
            ```
            # Outputs:
            ${{ steps.validate.outputs.stdout }}
            
            # Errors:
            ${{ steps.validate.outputs.stderr }}
            ```
            
            </details>
      - name: Fail on error
        if: ${{
          steps.fmt.outcome != 'success'
          || steps.init.outcome != 'success'
          || steps.validate.outcome != 'success'
          }}
        run: |
          exit 1

  commitlint:
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        env:
          # https://github.com/actions/setup-node/issues/733#issuecomment-1489952874
          # https://github.com/actions/cache/blob/04f198bf0b2a39f7230a4304bf07747a0bddf146/tips-and-workarounds.md#cache-segment-restore-timeout
          # -- note that actions/setup-node@3 [uses actions/cache@3.0.4](https://github.com/actions/setup-node/blob/a4fcaaf314b117a40d694a35ee36461f8ff3c6e6/package-lock.json#L41)
          #    which has a [default timeout of 60 minutes](https://github.com/actions/toolkit/blob/457303960f03375db6f033e214b9f90d79c3fe5c/packages/cache/RELEASES.md#304),
          #    not 10 minutes! Let's reduce it further.
          SEGMENT_DOWNLOAD_TIMEOUT_MINS: '2'
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Install commitlint
        run: |
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest
      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose
      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
